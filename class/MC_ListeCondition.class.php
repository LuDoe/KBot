<?php
/**
 * 
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 * @see        MC_Conditions
 */
require_once('MC_Conditions.class.php');

class MC_ListeCondition extends MC_Conditions {

	/**
	 * 
	 * @var MC_ConditionConcatenateur
	 * @access private
	 */
	private  $concatenateur;

	/**
	 * (?)
	 * @var array(?)
	 * @access private
	 */
	private  $tableauResultat;

	/**
	 * ((%A[ET]%B)[OU]%C[OU]%D)
	 * @var string
	 * @access private
	 */
	private  $messageConstruction;

	/**
	 * Description
Texte typé
Résultat
	 * @var array
	 * @access private
	 */
	private  $listeConditions;


	/**
	 * @access public
	 * @param string $conditionStrategie 
	 * @return void
	 */

	public final  function __construct($conditionStrategie = false) {
	//ERROR: METHOD CAN'T BE OVERLOADED, PARENT HAS DECLARED IT 'final'!
	}


	/**
	 * @access public
	 * @param string $conditionStrategie 
	 * @return void
	 */

	public final  function DecomposerConditionStrategie($conditionStrategie) {

	}


	/**
	 * @access public
	 * @param string $messageCondition 
	 * @return array
	 */

	public final  function ExtraireListeCondition($messageCondition) {

	}


	/**
	 * @access public
	 * @param string $conditionStrategie 
	 * @return MC_Condition
	 */

	public final  function ExtraireCondition($conditionStrategie) {

	}


	/**
	 * @access public
	 * @return string
	 */

	public final  function EnregistrerListeConditionTexte() {

	}


	/**
	 * @access public
	 * @return string
	 */

	public final  function EnregistrerResultatTexte() {

	}


	/**
	 * @access public
	 * @param string $conditionFormatTexte 
	 * @return MC_Condition
	 */

	public final  function InstancierCondition($conditionFormatTexte) {

	}


	/**
	 * @access public
	 * @param string $conditionTexte 
	 * @return MC_ListeCondition
	 */

	public final  function InstancierListeCondition($conditionTexte) {

	}


	/**
	 * @access public
	 * @param string $nouveauConcateneur [ET] / [OU]
	 * @return void
	 */

	public final  function EnregistrerConcateneur($nouveauConcateneur) {

	}


	/**
	 * @access public
	 * @return bool
	 */

	public final  function TesterConditions() {

	}


	/**
	 * @access public
	 * @return string
	 */

	public final  function RenvoyerDescription() {

	}


}
?>